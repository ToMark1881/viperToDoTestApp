//
//  NewTaskRouter.swift
//  ViperToDo
//
//  Created Vladyslav Vdovychenko on 19.08.2020.
//  Copyright © 2020 Vladyslav Vdovychenko. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class NewTaskWireframe: BaseWireframe, NewTaskWireframeProtocol {

    class func createListModule(newTaskDelegate: NewTaskDelegate) -> UIViewController {
        // Change to get view from storyboard if not using progammatic UI
        let viewController = mainStoryboard.instantiateViewController(identifier: "NewTaskViewController")
        if let view = viewController as? NewTaskViewController {
            let presenter: NewTaskPresenterProtocol & NewTaskInteractorOutputProtocol = NewTaskPresenter()
            let interactor: NewTaskInteractorInputProtocol & NewTaskRemoteDataManagerOutputProtocol = NewTaskInteractor()
            let wireframe: NewTaskWireframeProtocol = NewTaskWireframe()
            let remoteDataManager: NewTaskRemoteDataManagerInputProtocol = NewTaskRemoteDataManager()
            
            view.presenter = presenter
            presenter.view = view
            presenter.interactor = interactor
            presenter.wireframe = wireframe
            presenter.newTaskDelegate = newTaskDelegate
            interactor.presenter = presenter
            interactor.remoteDataManager = remoteDataManager
            remoteDataManager.remoteRequestHandler = interactor
            
            return viewController
        }

        return UIViewController()
    }
    
    
    func goBackToParent(from view: NewTaskViewProtocol) {
        if let sourceView = view as? UIViewController {
            sourceView.navigationController?.popViewController(animated: true)
        }
    }
}
