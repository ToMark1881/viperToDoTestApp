//
//  NewTaskProtocols.swift
//  ViperToDo
//
//  Created Vladyslav Vdovychenko on 19.08.2020.
//  Copyright © 2020 Vladyslav Vdovychenko. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import UIKit

//MARK: Wireframe -
protocol NewTaskWireframeProtocol: class {
    
    static func createListModule(newTaskDelegate: NewTaskDelegate) -> UIViewController
    
    /* Presenter -> Wireframe */
    
    func goBackToParent(from view: NewTaskViewProtocol)

}
//MARK: Presenter -
protocol NewTaskPresenterProtocol: class {

    var view: NewTaskViewProtocol? { get set }
    var interactor: NewTaskInteractorInputProtocol? { get set }
    var wireframe: NewTaskWireframeProtocol? { get set }
    var newTaskDelegate: NewTaskDelegate? { get set }
    /* View -> Presenter */
    
    func goBackToParent()
    func uploadTask(_ task: Task)
}

//MARK: Interactor -
protocol NewTaskInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    
    func didUploadTask()
    func onError(_ error: Error?)
}

protocol NewTaskInteractorInputProtocol: class {

    var presenter: NewTaskInteractorOutputProtocol?  { get set }
    var remoteDataManager: NewTaskRemoteDataManagerInputProtocol? { get set }
    /* Presenter -> Interactor */
    
    func uploadTask(_ task: Task)
}

protocol NewTaskDataManagerInputProtocol: class {
    /* Interactor -> DataManager */
}

protocol NewTaskRemoteDataManagerInputProtocol: class {
    
    var remoteRequestHandler: NewTaskRemoteDataManagerOutputProtocol? { get set }
    
    /* Interactor -> RemoteDataManager */
    
    func uploadTask(_ task: Task)
}

protocol NewTaskRemoteDataManagerOutputProtocol: class {
    /* RemoteDataManager -> Interactor */
    
    func onTaskUploaded()
    
    func onError(_ error: Error?)
}

//MARK: View -
protocol NewTaskViewProtocol: class {

    var presenter: NewTaskPresenterProtocol?  { get set }

    /* Presenter -> ViewController */
    
    func showError(_ error: Error?)
    
    func uploadTask()
}

protocol NewTaskDelegate: class {
    
    func didUploadTask()
    
}
