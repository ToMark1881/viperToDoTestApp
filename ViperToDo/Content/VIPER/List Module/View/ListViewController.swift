//
//  ListViewController.swift
//  ViperToDo
//
//  Created Vladyslav Vdovychenko on 18.08.2020.
//  Copyright © 2020 Vladyslav Vdovychenko. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ListViewController: BaseViewController {

    @IBOutlet weak var listTableView: UITableView!
    var presenter: ListPresenterProtocol?
    var taskList: [Task] = []
    
    fileprivate var taskCellIdentifier = "taskCellIdentifier"

	override func viewDidLoad() {
        super.viewDidLoad()
        listTableView.register(UINib(nibName: "TaskCell", bundle: nil), forCellReuseIdentifier: taskCellIdentifier)
        presenter?.viewDidLoad()
    }
    
    @IBAction func didTapOnAddNewTaskButton(_ sender: Any) {
        presenter?.showNewTask()
    }
    
}

extension ListViewController: ListViewProtocol {
    
    func showTasks(with tasks: [Task]) {
        self.taskList = tasks
        listTableView.reloadData()
    }
    
    func showError(_ error: Error?) {
        self.handleError(error)
    }
    
}

extension ListViewController: UITableViewDelegate, UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return taskList.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: taskCellIdentifier) as! TaskCell
        let task = taskList[indexPath.row]
        cell.set(for: task)
        return cell
    }
    
    
}
