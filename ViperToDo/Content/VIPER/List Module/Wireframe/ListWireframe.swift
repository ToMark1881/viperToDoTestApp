//
//  ListWireframe.swift
//  ViperToDo
//
//  Created Vladyslav Vdovychenko on 18.08.2020.
//  Copyright © 2020 Vladyslav Vdovychenko. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ListWireframe: BaseWireframe, ListWireframeProtocol {

    class func createListModule() -> UIViewController {
        let navController = mainStoryboard.instantiateViewController(identifier: "TasksNavigationController")
        if let view = navController.children.first as? ListViewController {
            let presenter: ListPresenterProtocol & ListInteractorOutputProtocol = ListPresenter()
            let interactor: ListInteractorInputProtocol & ListRemoteDataManagerOutputProtocol = ListInteractor()
            let wireframe: ListWireframeProtocol = ListWireframe()
            let remoteDataManager: ListRemoteDataManagerInputProtocol = ListRemoteDataManager()

            view.presenter = presenter
            presenter.view = view
            presenter.wireframe = wireframe
            presenter.interactor = interactor
            interactor.presenter = presenter
            interactor.remoteDataManager = remoteDataManager
            remoteDataManager.remoteRequestHandler = interactor

            return navController
        }
        return UIViewController()
    }
    
    func presentNewTaskScreen(from view: ListViewProtocol) {
        if let presenter = view.presenter as? NewTaskDelegate {
            let newTaskViewController = NewTaskWireframe.createListModule(newTaskDelegate: presenter)
            if let sourceView = view as? UIViewController {
                sourceView.navigationController?.pushViewController(newTaskViewController, animated: true)
            }
        }
        
        
    }
}
